apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: sipub
data:
  # endereço do serviço gRPC "movies" dentro do mesmo namespace
  MOVIES_ADDR: "movies:50051"
  # porta HTTP do container
  HTTP_ADDR: ":8080"
  # usado pelo main.go para ajustar o host do Swagger em runtime
  SWAGGER_HOST: "localhost:30080"
  # modo do Gin
  GIN_MODE: "release"
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: sipub
spec:
  type: NodePort
  selector:
    app: api
  ports:
    - name: http
      port: 8080        # porta do serviço dentro do cluster
      targetPort: 8080  # porta exposta pelo container
      nodePort: 30080   # porta fixa no host (externo) -> http://localhost:30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: sipub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: sipubtech-challenge-api-gateway:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: api-config
          # usamos o swagger como endpoint de saúde para não depender do gRPC
          readinessProbe:
            httpGet:
              path: /swagger/doc.json
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /swagger/doc.json
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
